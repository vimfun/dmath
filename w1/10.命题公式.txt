[音乐]
欢迎回来，那么既然逻辑符号组成的这个规则不是随意的，
那么，由逻辑符号所组成的这个命题的公式，
它的规则是什么样子的呢？我们来看看命题公式它的组成成分。

首先是
    **命题常元**
，那么命题常元是由表示具体的命题
以及表示 __常命题__ 的这些p，q，r，s的单字母和t，f
来组成。

第二呢，就是命题的变元，它是个变量，
那么它是以真假或者1，0作为取值范围的一个变量，
那么它也是用p，q，r，s
来表示。
那么之后这个命题公式，它就是由命题常元、
命题变元
以及逻辑联结词组成的，形式更为复杂的这个命题，称作为命题公式。
那么，
    **命题常元和命题变元 它如何组成命题公式？**
那么在这，命题公式有一个定义，三句话的定义，
那么这种定义称之为
    **归纳定义**，
第一句话说
命题常元和命题变元它本身就是命题公式。
特别地称之为原子公式或者就称之为原子。

第二句话，如果A，B是命题公式的话，
那么，（¬A），（A∧B），
（A∨B），（A→B）以及（A↔B）
也是命题公式。

第三句话，
只有有限步地引用上面两条所构成的符号串，
它才是命题公式。

所以呢，这是一个三句话的一个定义。
我们把命题公式呢也可以简称作为公式，
一般采用大写的A，B，C来表示它。
那么我们这呢，就要注意一下大小写，通常呢，A，B，C是
代表大写的，是代表命题公式，而小写的p，q，r，s，t，f
那么它都代表命题，特别是命题变元和命题常元。

命题公式的这种定义的方法就称之为归纳定义，我们刚才提到的。
而归纳定义是一种很特别的，我们也看到，它三句话，
那么这种三句话的特别的归纳的定义

我们在第二章，这个集合论里头，还会再详细地讨论到它。

那么，我们根据定义，给出一些命题公式的例子。
比如说像这个，（¬（p→（q∧r）））
然后它每一层都有括号，那么这个呢，就是命题公式。
而我们看看下面这几个，都不能算是。
比如说，（qp），那我们知道
它少了联结词，没有联结词，所以它不是命题公式。
第二个像这样（p1∧(p2∧.....
那么显然它是要表现是一个无限的一个概念，当然它直接
违反了第三条，也就说是有限的，这个最后上它应该是有限。

第三个，p→r∧s，这看起来好像没有什么问题，
它都是一个命题，然后联结词，命题，
联结词，命题，这样的形式，但是呢，如果严格按照命题公式的定义来说，
它缺少了括号，所以它也不能算是
严格的命题公式，当然，在很多时候呢，这个括号是挺烦人的，所以，如果按照严格的
这个命题公式的定义去写命题公式的话，
我们发现有太多的括号，所以呢，
很繁琐。
我们就来做一些简化的约定，旨在减少一些括号。
那么
第一，公式最外层的括号一律可以省略，我们就不要了。
第二呢，我们来约定这个逻辑联结词的优先级，那么这样呢就可以进一步地减少括号。
那如果按照这个简化的约定来说，那像上面那个
第三个，p→r∧s，
那么它就是合法的命题公式了。

我们来看看逻辑联结词的优先级。
那么在我们所接触过的这五个联结词当中，
它们是不太一样的。
像¬，它是一个一元的联结词，
也就说它只连接了单个的命题。
而其它呢都是连接两个命题的所谓的二元联结词。
我们就把这个优先级定义为，
第一优先级呢，是¬，因为它是一元的，贴得命题最紧。
然后∧和∨，它是第二优先级，它们是优先级相同的一组。
然后接下来是→，最后是↔，优先级最低。
那么，除非有括号，否则呢，
就按照这个优先级从高到低，从左到右的这个次序
来进行结合，那么所以这样呢，
¬p∨q那么就实际上就等同于（（¬p）∨q）。
但是呢，如果括号过少的话，会有时候会引起一些混淆。
比如说像这个，
p→q∧r→s
而这个从人们这个对称的直觉上来看呢，好像是这样，p→q然后呢
跟 r→s 做一个合取。
但实际上结合这个优先级，它并不是这样的。
它其实应该是q和r先做合取，
然后作为后件再由p来蕴含它，然后呢再
蕴含s，是这样的，所以有时候我们该加的括号还是应该加的。
那么，命题公式它是一个按照归纳定义所构成的一个字符串。
那么它在形式上呢，是有既定的规则的。

那么，这个命题公式它构成构造好了以后，在内容上
又具有什么样的意义呢？
